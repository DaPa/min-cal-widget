apply plugin: 'com.android.application'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

android {

    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {

        applicationId "cat.mvmike.minimalcalendarwidget"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 9
        versionName "0.3.2"

        multiDexEnabled true
    }

    /*
     * To sign release builds, create the file gradle.properties in
     * ~/.gradle/ with this content:
     *
     * signingStoreFile=key.store
     * signingStorePassword=xxx
     * signingKeyAlias=alias
     * signingKeyPassword=xxx
     */
    if (project.hasProperty('signingStoreFile') &&
            project.hasProperty('signingStorePassword') &&
            project.hasProperty('signingKeyAlias') &&
            project.hasProperty('signingKeyPassword')) {

        println "Found sign properties in gradle.properties! Signing buildâ€¦"
        signingConfigs {
            release {
                storeFile file(signingStoreFile)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }

    compileOptions {
        compileOptions.encoding = "UTF-8"

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// https://developer.android.com/topic/libraries/support-library/packages.html
dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    testImplementation 'junit:junit:4.12'
}

pmd {
    toolVersion = '5.5.2'
    consoleOutput = true
}

task pmdMain(type: Pmd, dependsOn: "assembleDebug") {
    ruleSetFiles = files("${project.rootDir}/config/pmd/rules.xml")
    ruleSets = [] // otherwise defaults clash with the list in rules.xml
    source 'src/main/java'
    include '**/*.java'
}

task pmd(dependsOn: [pmdMain]) {}

checkstyle {
    toolVersion = '7.4'
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src/main/java'
    include '**/*.java'

    classpath = files()
}